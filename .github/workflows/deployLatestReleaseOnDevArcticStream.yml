name: Deploy DERS API to Dev Server

on:
  workflow_call:
    secrets:
      REMOTE_SERVER_HOST:
        required: true
      REMOTE_SERVER_PASSWORD:
        required: true
      STRAPI_DATABASE_NAME:
        required: true
      STRAPI_DATABASE_USERNAME:
        required: true
      STRAPI_JWT_SECRET:
        required: true
      STRAPI_ADMIN_JWT_SECRET:
        required: true
      STRAPI_DATABASE_PASSWORD:
        required: true
      MAILING_DB_USERNAME:
        required: true
      MAILING_DB_PASSWORD:
        required: true

jobs:
  deploy-latest-release-on-dev:
    runs-on: ubuntu-latest
    env:
      REMOTE_SERVER_HOST: ${{ secrets.REMOTE_SERVER_HOST }}
      REMOTE_SERVER_PASSWORD: ${{ secrets.REMOTE_SERVER_PASSWORD }}
      STRAPI_DATABASE_NAME: ${{ secrets.STRAPI_DATABASE_NAME }}
      STRAPI_DATABASE_USERNAME: ${{ secrets.STRAPI_DATABASE_USERNAME }}
      STRAPI_JWT_SECRET: ${{ secrets.STRAPI_JWT_SECRET }}
      STRAPI_ADMIN_JWT_SECRET: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
      STRAPI_DATABASE_PASSWORD: ${{ secrets.STRAPI_DATABASE_PASSWORD }}
      MAILING_DB_USERNAME: ${{ secrets.MAILING_DB_USERNAME }}
      MAILING_DB_PASSWORD: ${{ secrets.MAILING_DB_PASSWORD }}
    steps:
      - name: Print env variables
        run: |
          echo "REMOTE_SERVER_HOST = ${REMOTE_SERVER_HOST}" 
          echo "REMOTE_SERVER_PASSWORD = ${REMOTE_SERVER_PASSWORD}" 
          echo "STRAPI_DATABASE_NAME = ${STRAPI_DATABASE_NAME}" 
          echo "STRAPI_DATABASE_USERNAME = ${STRAPI_DATABASE_USERNAME}" 
          echo "STRAPI_JWT_SECRET = ${STRAPI_JWT_SECRET}" 
          echo "STRAPI_ADMIN_JWT_SECRET = ${STRAPI_ADMIN_JWT_SECRET}" 
          echo "STRAPI_DATABASE_PASSWORD = ${STRAPI_DATABASE_PASSWORD}" 
          echo "MAILING_DB_USERNAME = ${MAILING_DB_USERNAME}" 
          echo "MAILING_DB_PASSWORD = ${MAILING_DB_PASSWORD}"
      - name: Execute docker-compose remotely via ssh
        uses: appleboy/ssh-action@master
        with:
          username: github-actions
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          password: ${{ secrets.REMOTE_SERVER_PASSWORD }}
          script: |
            cd /opt/arctic-stream
            docker compose down
            docker compose up -d --pull
